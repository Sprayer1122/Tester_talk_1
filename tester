#!/usr/bin/env python3
"""
Quick fix to add missing reviewer_name column to issues table
"""

import pymysql
import sys

def add_reviewer_column():
    """Add missing reviewer_name column to issues table"""
    print("üîß Adding missing reviewer_name column to issues table...")
    
    try:
        # Connect to MySQL database
        connection = pymysql.connect(
            host='172.23.104.39',
            port=3306,
            user='etladmin',
            password='YOUR_ACTUAL_PASSWORD',  # Replace with your actual etladmin password
            database='Tester_Talk',
            charset='utf8mb4'
        )
        
        with connection.cursor() as cursor:
            # Check if column exists
            cursor.execute("""
                SELECT COLUMN_NAME 
                FROM INFORMATION_SCHEMA.COLUMNS 
                WHERE TABLE_SCHEMA = 'Tester_Talk' 
                AND TABLE_NAME = 'issues' 
                AND COLUMN_NAME = 'reviewer_name'
            """)
            
            existing_column = cursor.fetchone()
            
            if existing_column:
                print("‚úÖ reviewer_name column already exists!")
            else:
                print("‚ùå reviewer_name column missing - adding it now...")
                
                # Add the missing column
                cursor.execute("""
                    ALTER TABLE issues 
                    ADD COLUMN reviewer_name VARCHAR(100) DEFAULT 'Admin' 
                    AFTER reporter_name
                """)
                
                connection.commit()
                print("‚úÖ reviewer_name column added successfully!")
            
            # Verify the column exists now
            cursor.execute("""
                SELECT COLUMN_NAME, DATA_TYPE, COLUMN_DEFAULT 
                FROM INFORMATION_SCHEMA.COLUMNS 
                WHERE TABLE_SCHEMA = 'Tester_Talk' 
                AND TABLE_NAME = 'issues' 
                AND COLUMN_NAME = 'reviewer_name'
            """)
            
            result = cursor.fetchone()
            if result:
                print(f"‚úÖ Column verified: {result[0]} ({result[1]}, default: {result[2]})")
            else:
                print("‚ùå Column still missing after adding!")
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        sys.exit(1)
    
    finally:
        if 'connection' in locals():
            connection.close()

if __name__ == "__main__":
    add_reviewer_column()
    print("\nüéâ Fix completed! You can now start the Flask app.") 
